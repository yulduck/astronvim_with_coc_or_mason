{
  "lspconfig": {
    "cssls": {
      "css.lint.unknownAtRules": "ignore",
      "less.lint.unknownAtRules": "ignore",
      "scss.lint.unknownAtRules": "ignore",
      "scss.validate": false
    },
    "tsserver": {
      "javascript.updateImportsOnFileMove.enabled": "always",
      "typescript.updateImportsOnFileMove.enabled": "always"
    },
    "pylsp": {
      "pylsp.plugins.rope_autoimport.enabled": true,
      "pylsp.plugins.rope_autoimport.memory": true,
      "pylsp.plugins.rope_completion.enabled": true,
      "pylsp.plugins.rope_completion.eager": true,
      "pylsp.plugins.jedi.auto_import_modules": [
        "numpy",
        "pandas",
        "matplotlib"
      ],
      "pylsp.plugins.jedi_completion.eager": true,
      "pylsp.plugins.jedi_completion.fuzzy": true,
      "pylsp.plugins.jedi_completion.include_class_objects": true,
      "pylsp.plugins.jedi_completion.include_function_objects": true
    },
    "pyright": {
      "python.pythonPath": "python",
      "python.analysis.autoSearchPaths": true,
      "python.analysis.diagnosticMode": "workspace",
      "python.analysis.useLibraryCodeForTypes": true,
      "python.analysis.typeCheckingMode": "off"
    },
    "tailwindcss": {
      "tailwindCSS.classAttributes": [
        "class",
        "className",
        "ngClass",
        "classList"
      ],
      "tailwindCSS.experimental.classRegex": [
        [
          "cva\\(([^)]*)\\)",
          "[\"'`]([^\"'`]*).*?[\"'`]"
        ],
        [
          "cx\\(([^)]*)\\)",
          "(?:'|\"|`)([^']*)(?:'|\"|`)"
        ],
        "tw`([^`]*)",
        "tw=\"([^\"]*)",
        "tw={\"([^\"}]*)",
        "tw\\.\\w+`([^`]*)",
        "tw\\(.*?\\)`([^`]*)",
        "data-te-class-[^=]*=(\"([^\"]*)|'([^']*)\")"
      ],
      "tailwindCSS.includeLanguages": {
        "typescript": "javascript",
        "typescriptreact": "javascript"
      },
      "tailwindCSS.emmetCompletions": false,
      "tailwindCSS.lint.cssConflict": "warning",
      "tailwindCSS.lint.invalidApply": "error",
      "tailwindCSS.lint.invalidConfigPath": "error",
      "tailwindCSS.lint.invalidScreen": "error",
      "tailwindCSS.lint.invalidTailwindDirective": "error",
      "tailwindCSS.lint.invalidVariant": "error",
      "tailwindCSS.lint.recommendedVariantOrder": "warning",
      "tailwindCSS.validate": true
    },
    "rust_analyzer": {
      "rust-analyzer.cachePriming.enable": true,
      "rust-analyzer.cachePriming.numThreads": 0
    }
  }
}
